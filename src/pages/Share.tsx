import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { toast } from '@/components/ui/use-toast';
import Icon from '@/components/ui/icon';

const Share: React.FC = () => {
  const navigate = useNavigate();
  const [videoUrl, setVideoUrl] = useState<string>('');
  const [isSharing, setIsSharing] = useState(false);
  const [videoBlob, setVideoBlob] = useState<Blob | null>(null);

  useEffect(() => {
    // –ü–æ–ª—É—á–∞–µ–º –≤–∏–¥–µ–æ –∏–∑ sessionStorage
    const savedVideoUrl = sessionStorage.getItem('recordedVideo');
    if (savedVideoUrl) {
      setVideoUrl(savedVideoUrl);
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º URL –≤ Blob –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      fetch(savedVideoUrl)
        .then(response => response.blob())
        .then(blob => setVideoBlob(blob))
        .catch(error => {
          console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', error);
          toast({
            title: "–û—à–∏–±–∫–∞",
            description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ",
            variant: "destructive"
          });
        });
    } else {
      // –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–ø–∏—Å–∏
      navigate('/record');
    }
  }, [navigate]);

  const prepareVideoMessage = () => {
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π
    const locationData = localStorage.getItem('userLocation');
    let locationText = '';
    
    if (locationData) {
      try {
        const location = JSON.parse(locationData);
        const lat = parseFloat(location.latitude).toFixed(6);
        const lng = parseFloat(location.longitude).toFixed(6);
        const mapsUrl = `https://maps.google.com/?q=${lat},${lng}`;
        locationText = `\nüìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${lat}, ${lng}\nüó∫Ô∏è –ö–∞—Ä—Ç–∞: ${mapsUrl}`;
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', e);
      }
    }

    return `üé• –ù–æ–≤—ã–π –ª–∏–¥ IMPERIA PROMO!\nüìÖ ${new Date().toLocaleString('ru-RU')}${locationText}`;
  };

  const shareToTelegram = async () => {
    setIsSharing(true);
    
    try {
      const message = prepareVideoMessage();
      const encodedMessage = encodeURIComponent(message);
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
      const isAndroid = /Android/i.test(navigator.userAgent);
      const isIOS = /iPhone|iPad|iPod/i.test(navigator.userAgent);
      const isMobile = isAndroid || isIOS;
      
      if (isMobile && videoBlob && navigator.share) {
        // –ü—Ä–æ–±—É–µ–º Web Share API (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –Ω–∞ iOS Safari –∏ Android Chrome)
        try {
          const videoFile = new File([videoBlob], `imperia_lead_${Date.now()}.mp4`, {
            type: videoBlob.type || 'video/mp4'
          });
          
          if (navigator.canShare && navigator.canShare({ files: [videoFile] })) {
            await navigator.share({
              title: 'üé• –ù–æ–≤—ã–π –ª–∏–¥ IMPERIA PROMO',
              text: message,
              files: [videoFile]
            });
            
            toast({
              title: "‚úÖ –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
              description: "–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            });
            
            navigate('/success');
            return;
          }
        } catch (shareError: any) {
          console.log('Web Share API –æ—à–∏–±–∫–∞:', shareError);
          if (shareError.name === 'AbortError') {
            return; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª
          }
        }
      }
      
      // Fallback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      if (isMobile) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ –≤ localStorage –∫–∞–∫ base64 (–¥–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ)
        if (videoBlob && videoBlob.size < 10 * 1024 * 1024) { // –ú–µ–Ω—å—à–µ 10MB
          const reader = new FileReader();
          reader.onload = () => {
            const base64Video = reader.result as string;
            sessionStorage.setItem('videoForShare', base64Video);
            sessionStorage.setItem('shareMessage', message);
            
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º Telegram —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            if (isAndroid) {
              // Android: –ø—Ä–æ–±—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π Telegram
              window.location.href = `tg://msg?text=${encodedMessage}`;
              
              // Fallback —á–µ—Ä–µ–∑ Telegram Web
              setTimeout(() => {
                window.open(`https://t.me/share/url?url=${encodedMessage}`, '_blank');
              }, 1000);
              
            } else if (isIOS) {
              // iOS: —Å–Ω–∞—á–∞–ª–∞ Telegram, –∑–∞—Ç–µ–º –≤–µ–±
              window.location.href = `tg://msg?text=${encodedMessage}`;
              
              setTimeout(() => {
                window.open(`https://t.me/share/url?url=${encodedMessage}`, '_blank');
              }, 1000);
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            toast({
              title: "üì± –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
              description: isAndroid 
                ? "1. –í Telegram –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è\n2. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏\n3. –î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ"
                : "1. –í Telegram –≤—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç\n2. –ù–∞–∂–º–∏—Ç–µ üìé –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ\n3. –î–æ–±–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ",
            });
            
            setTimeout(() => navigate('/success'), 3000);
          };
          reader.readAsDataURL(videoBlob);
        } else {
          // –î–ª—è –±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º Telegram —Å —Ç–µ–∫—Å—Ç–æ–º
          if (isAndroid) {
            window.location.href = `tg://msg?text=${encodedMessage}`;
            setTimeout(() => window.open(`https://t.me/share/url?url=${encodedMessage}`, '_blank'), 1000);
          } else {
            window.location.href = `tg://msg?text=${encodedMessage}`;
            setTimeout(() => window.open(`https://t.me/share/url?url=${encodedMessage}`, '_blank'), 1000);
          }
          
          toast({
            title: "üì± –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ",
            description: "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏ –≤ Telegram",
          });
          
          setTimeout(() => navigate('/success'), 2000);
        }
      } else {
        // Desktop: Telegram Web
        window.open(`https://web.telegram.org/a/#?text=${encodedMessage}`, '_blank');
        
        toast({
          title: "üíª Telegram Web",
          description: "–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª –≤ –æ–∫–Ω–æ —á–∞—Ç–∞ Telegram",
        });
        
        setTimeout(() => navigate('/success'), 2000);
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
      toast({
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram",
        variant: "destructive"
      });
    } finally {
      setIsSharing(false);
    }
  };

  const shareToWhatsApp = async () => {
    setIsSharing(true);
    
    try {
      const message = prepareVideoMessage();
      const encodedMessage = encodeURIComponent(message);
      
      const isAndroid = /Android/i.test(navigator.userAgent);
      const isIOS = /iPhone|iPad|iPod/i.test(navigator.userAgent);
      const isMobile = isAndroid || isIOS;
      
      if (isMobile) {
        // –ù–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WhatsApp
        if (isAndroid) {
          window.location.href = `whatsapp://send?text=${encodedMessage}`;
          // Fallback
          setTimeout(() => {
            window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');
          }, 1000);
        } else {
          // iOS
          window.location.href = `whatsapp://send?text=${encodedMessage}`;
          setTimeout(() => {
            window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');
          }, 1000);
        }
        
        toast({
          title: "üíö WhatsApp",
          description: "–ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ",
        });
      } else {
        // Desktop: WhatsApp Web
        window.open(`https://web.whatsapp.com/send?text=${encodedMessage}`, '_blank');
        
        toast({
          title: "üíª WhatsApp Web",
          description: "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª –∫ —Å–æ–æ–±—â–µ–Ω–∏—é",
        });
      }
      
      setTimeout(() => navigate('/success'), 2000);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ WhatsApp:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ WhatsApp",
        variant: "destructive"
      });
    } finally {
      setIsSharing(false);
    }
  };

  const shareToViber = async () => {
    setIsSharing(true);
    
    try {
      const message = prepareVideoMessage();
      const encodedMessage = encodeURIComponent(message);
      
      const isAndroid = /Android/i.test(navigator.userAgent);
      const isIOS = /iPhone|iPad|iPod/i.test(navigator.userAgent);
      const isMobile = isAndroid || isIOS;
      
      if (isMobile) {
        // Viber deep link
        window.location.href = `viber://forward?text=${encodedMessage}`;
        
        // Fallback –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ Viber –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        setTimeout(() => {
          toast({
            title: "üíú Viber",
            description: "–ï—Å–ª–∏ Viber –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é",
          });
        }, 1000);
      } else {
        toast({
          title: "üíú Viber",
          description: "Viber –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ desktop. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ",
          variant: "destructive"
        });
      }
      
      setTimeout(() => navigate('/success'), 2000);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Viber:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Viber",
        variant: "destructive"
      });
    } finally {
      setIsSharing(false);
    }
  };

  const downloadVideo = () => {
    if (videoBlob) {
      const url = URL.createObjectURL(videoBlob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `imperia_lead_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.mp4`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
      
      toast({
        title: "‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ",
        description: "–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –ø–∞–ø–∫—É –∑–∞–≥—Ä—É–∑–æ–∫",
      });
    }
  };

  if (!videoUrl) {
    return (
      <div className="min-h-screen bg-black text-white flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-gray-950 to-black text-white">
      {/* –®–∞–ø–∫–∞ */}
      <div className="relative z-20 p-4 bg-black/50 backdrop-blur-sm">
        <div className="flex items-center justify-between">
          <Button
            variant="ghost"
            size="sm"
            onClick={() => navigate('/record')}
            className="text-white hover:bg-white/10"
          >
            <Icon name="ArrowLeft" size={20} className="mr-2" />
            –ù–∞–∑–∞–¥
          </Button>
          
          <h1 className="text-lg font-bold">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ</h1>
          
          <div className="w-20" />
        </div>
      </div>

      <div className="p-4 space-y-6">
        
        {/* –ü—Ä–µ–≤—å—é –≤–∏–¥–µ–æ */}
        <Card className="p-4 bg-black/30 border-gray-800">
          <div className="aspect-video bg-black rounded-lg overflow-hidden mb-4">
            <video
              src={videoUrl}
              controls
              className="w-full h-full object-cover"
              playsInline
            />
          </div>
          
          <div className="flex items-center justify-between text-sm text-gray-400">
            <span>–í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ</span>
            <Button
              onClick={downloadVideo}
              variant="ghost"
              size="sm"
              className="text-gray-400 hover:text-white"
            >
              <Icon name="Download" size={16} className="mr-2" />
              –°–∫–∞—á–∞—Ç—å
            </Button>
          </div>
        </Card>

        {/* –ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã */}
        <div className="space-y-4">
          <h2 className="text-xl font-bold text-center mb-6">–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</h2>
          
          {/* Telegram */}
          <Button
            onClick={shareToTelegram}
            disabled={isSharing}
            className="w-full h-16 bg-[#0088CC] hover:bg-[#0077B5] text-white text-lg font-semibold rounded-xl flex items-center justify-center gap-4 transition-all duration-300 hover:scale-[1.02]"
          >
            <div className="w-8 h-8 bg-white rounded-full flex items-center justify-center">
              <Icon name="Send" size={20} className="text-[#0088CC]" />
            </div>
            {isSharing ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : 'Telegram'}
          </Button>

          {/* WhatsApp */}
          <Button
            onClick={shareToWhatsApp}
            disabled={isSharing}
            className="w-full h-16 bg-[#25D366] hover:bg-[#20BA5A] text-white text-lg font-semibold rounded-xl flex items-center justify-center gap-4 transition-all duration-300 hover:scale-[1.02]"
          >
            <div className="w-8 h-8 bg-white rounded-full flex items-center justify-center">
              <Icon name="MessageCircle" size={20} className="text-[#25D366]" />
            </div>
            {isSharing ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : 'WhatsApp'}
          </Button>

          {/* Viber */}
          <Button
            onClick={shareToViber}
            disabled={isSharing}
            className="w-full h-16 bg-[#665CAC] hover:bg-[#5A5099] text-white text-lg font-semibold rounded-xl flex items-center justify-center gap-4 transition-all duration-300 hover:scale-[1.02]"
          >
            <div className="w-8 h-8 bg-white rounded-full flex items-center justify-center">
              <Icon name="Phone" size={20} className="text-[#665CAC]" />
            </div>
            {isSharing ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : 'Viber'}
          </Button>

          {/* –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (Web Share API) */}
          {navigator.share && (
            <Button
              onClick={async () => {
                try {
                  if (videoBlob) {
                    const videoFile = new File([videoBlob], 'imperia_video.mp4', {
                      type: videoBlob.type || 'video/mp4'
                    });
                    
                    await navigator.share({
                      title: 'üé• –í–∏–¥–µ–æ IMPERIA PROMO',
                      text: prepareVideoMessage(),
                      files: [videoFile]
                    });
                  }
                } catch (error) {
                  console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞:', error);
                }
              }}
              variant="outline"
              className="w-full h-16 border-gray-600 text-white hover:bg-gray-800 text-lg font-semibold rounded-xl flex items-center justify-center gap-4"
            >
              <Icon name="Share" size={24} />
              –î—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            </Button>
          )}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Card className="p-4 bg-blue-900/20 border-blue-500/50">
          <div className="flex items-start gap-3">
            <Icon name="Info" size={20} className="text-blue-400 mt-0.5" />
            <div className="text-sm text-blue-200">
              <p className="font-semibold mb-2">–ö–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ:</p>
              <ol className="list-decimal list-inside space-y-1 text-blue-100">
                <li>–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –≤—ã—à–µ</li>
                <li>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</li>
                <li>–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</li>
                <li>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
              </ol>
            </div>
          </div>
        </Card>

      </div>
    </div>
  );
};

export default Share;